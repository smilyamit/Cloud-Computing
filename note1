#Cloud computing (for my understanding)
=>Cloud is a set of tools that helps you (as a developer) to spend less time on managing and spend more time on creating

#cloud computing (By standard way)
=>Cloud computing is basically the provision of providing computing resources (e.g. servers, storage, databases, network 
components, software, analysis and intelligent functions) via the Internet, i.e. the cloud
Major clod service provider are (aws, azure, GCP)

#Cloud Terminlology
1 High Avaliablity: (eg google drive)
2 Fault tolerant: (new instance is created at same tilme when running instance failed)
3 Scalability: AS instantaneously no of user increases (eg in evening in netflix) simultaneously no of instance is increased
4 Elasticity: As no of user decreases (eg morining time in netflix) simultaneously no of instance is decreased
 Amazon 
A server can handle only a limited amount of users (normally 1 million for medium server)
*Amazon
EC2= Elastic computer cloud 
S3- simple storage service
VPC- virtual private cloud
RDS- Relational Database Service 
    
vpc- vpc is your private section of aws where you can place your aws resources and allow/restrict others to access to them
     A VPC can be described as your own "private section" of AWS

EC2 = basic computer with internet = EC2 server = EC2 instance (Virtual Computer with Processing power but no storage)
so, EC2 is a virtual computer that u can use for whatever u like

RDS- is aws provisoned database service for organizing user informations eg sql)
     (eg user list,user personalised catalogue(for mov), new user adding, old user login, logout)

S3- Amazon S3 is a large datastorage bucket (in petabyte). It is used to store data of customer for permanent usage
   (like netflix stores all videos file there so that it can provide any video to any instance whenever required)
   Generally data storage is not done on ec2 instances because there is always addition or sub of instances


AWS region: aws data center prime location with 1 or more Avalability zone

IAS: Identity  Access Management
DynamoDB: A database that uses no sql
cloudwatch: an aws service to watch health of instance
SNS: simple notification service (based on cloudwatch)
ELB: Elastic load balancer: A toolthat distribute incoming web traffic
Auto Scaling : For upscaling and down scaling
Route S3: an aws that do mangt of website domain and DNS record
Lambda: Serverless computing allow code to run without setup and maintenance of actual servers

Area of field related to aws solution architect associate
Less important:

ML, Analytics
desktop and app streaming
mgt and governence
Migration and transfer

More import:
security, identify and compliance
Network and content delivery (Route53: Amazon DNS Service , VPC)

Compute (or EC2 and lambda)
Storage(s3)
Database( RDBS and DynamoDB and RedShift)


S3 has following feature:
Tired  Storage Available
Lifecycle Management
Versioning
Encryption MFA delete
Seciure your data using access control list and bucket policies

S3 storage classses
1) S3 Standard
2) S3-IA (infrequently accessed)
3) S3 One Zone -1A (no multiple availability or s3rrs)
4) S3- Intelligent Tiering (Automatically moving data to most cost effective access tier
5) S3 Glacier (good for data archieve, Retrieval time from minute to hour)
6) S3 Glacier Deep Archieve- 12 hour retrieval time
Charge for s3 in follwing:
=> storage , requests, storage, storage management pricing, data trandfer pricing, data transfer pricing, transfer accn
   cross region replication pricing
   
=> Transfer acceleration take advantage of globally distributed edge locations
tips for exam
remember that s3 is object-based i.e allow u to upload files
files can be from 0 byte to 5tb
there is unlimited storage
files are stored in buckets
s3 is a universal namespce, name must be unique globally for your s3
not suitable to install an operating system on
successful uploads will generate http 200 ststus code
u can turn on mfa delete

Key fundametal of s3:
key (name of object)
value (data and is made of sequence of bytes)
version id (important for versioning)
metadata (data abt data u r storing)
subresources: (access control list, torrent)

read  after write consistency
eventual consistency for overwrite





   
   

























